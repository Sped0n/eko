function y = filter_simu_75(x)
%FILTER_SIMU_75 Filters input x and returns output y.

% MATLAB Code
% Generated by MATLAB(R) 23.2 and DSP System Toolbox 23.2.
% Generated on: 08-Apr-2024 21:56:16

%#codegen

% To generate C/C++ code from this function use the codegen command. Type
% 'help codegen' for more information.

persistent Hd;

if isempty(Hd)
    
    % The following code was used to design the filter coefficients:
    % % FIR Window Bandpass filter designed using the FIR1 function.
    %
    % % All frequency values are in Hz.
    % Fs = 60000;  % Sampling Frequency
    %
    % N    = 75;       % Order
    % Fc1  = 200;      % First Cutoff Frequency
    % Fc2  = 6000;     % Second Cutoff Frequency
    % flag = 'scale';  % Sampling Flag
    % % Create the window vector for the design algorithm.
    % win = hamming(N+1);
    %
    % % Calculate the coefficients using the FIR1 function.
    % b  = fir1(N, [Fc1 Fc2]/(Fs/2), 'bandpass', win, flag);
    
    Hd = dsp.FIRFilter( ...
        'Numerator', [-0.00116004079796903 -0.00106917521353075 ...
        -0.000764679042739 -0.0003072211226867 0.000164207967299516 ...
        0.000435124903294936 0.000271483197733249 -0.000470491888160405 ...
        -0.0017217000897933 -0.00313647505515607 -0.00415441843156043 ...
        -0.00420547675092824 -0.00299940566117154 -0.000773004971216354 ...
        0.00164978521745508 0.00307534103141867 0.00240871949497977 ...
        -0.000788011023860219 -0.00589583262865323 -0.0112319203490423 ...
        -0.0145402518122182 -0.0138748708628593 -0.00856523478752372 ...
        0.000153483598850932 0.00920261951307809 0.0145431612712895 ...
        0.0126811738493038 0.00229699537086446 -0.014641595095766 ...
        -0.0328228349989655 -0.0448000855076539 -0.0432164029582198 ...
        -0.0233754244215389 0.0147209141061812 0.0656480380419428 ...
        0.119531009672336 0.164529651888465 0.19011600856283 0.19011600856283 ...
        0.164529651888465 0.119531009672336 0.0656480380419428 ...
        0.0147209141061812 -0.0233754244215389 -0.0432164029582198 ...
        -0.0448000855076539 -0.0328228349989655 -0.014641595095766 ...
        0.00229699537086446 0.0126811738493038 0.0145431612712895 ...
        0.00920261951307809 0.000153483598850932 -0.00856523478752372 ...
        -0.0138748708628593 -0.0145402518122182 -0.0112319203490423 ...
        -0.00589583262865323 -0.000788011023860219 0.00240871949497977 ...
        0.00307534103141867 0.00164978521745508 -0.000773004971216354 ...
        -0.00299940566117154 -0.00420547675092824 -0.00415441843156043 ...
        -0.00313647505515607 -0.0017217000897933 -0.000470491888160405 ...
        0.000271483197733249 0.000435124903294936 0.000164207967299516 ...
        -0.0003072211226867 -0.000764679042739 -0.00106917521353075 ...
        -0.00116004079796903], ...
        'CoefficientsDataType', 'Custom', ...
        'CustomCoefficientsDataType', numerictype(true,16,17));
end

s = fi(x,1,16,0,'RoundingMethod','Round','OverflowAction','Saturate');
y = step(Hd,s);


% [EOF]
